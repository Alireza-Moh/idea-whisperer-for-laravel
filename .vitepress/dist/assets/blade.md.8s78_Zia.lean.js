import{_ as a,c as o,a0 as t,o as l}from"./chunks/framework.oyq6xFFj.js";const i="/whisperer-for-laravel-docs/assets/view-method.medeJM0n.png",n="/whisperer-for-laravel-docs/assets/view-methods.DMePRRo-.png",s="/whisperer-for-laravel-docs/assets/blade-component-completion.D0UYtcI0.png",g=JSON.parse('{"title":"Blade","description":"","frontmatter":{},"headers":[],"relativePath":"blade.md","filePath":"blade.md"}'),r={name:"blade.md"};function d(c,e,p,m,u,f){return l(),o("div",null,e[0]||(e[0]=[t('<h1 id="blade" tabindex="-1">Blade <a class="header-anchor" href="#blade" aria-label="Permalink to &quot;Blade&quot;">​</a></h1><p>The plugin offers autocompletion for views file names by scanning all Blade files in your project, making it easy to reference and navigate to blade view files.</p><p><img src="'+i+'" alt="Code generation"></p><p><img src="'+n+'" alt="Code generation"></p><p>It also provides autocompletion for the following methods:</p><ul><li><code>Illuminate\\Support\\Facades\\View::make()</code></li><li><code>Illuminate\\Support\\Facades\\View::first()</code></li><li><code>Illuminate\\Support\\Facades\\View::exists()</code></li><li><code>Illuminate\\Support\\Facades\\View::composer()</code></li><li><code>Illuminate\\Support\\Facades\\View::creator()</code></li><li><code>Illuminate\\Support\\Facades\\Route::view()</code></li></ul><h2 id="blade-components" tabindex="-1">Blade components <a class="header-anchor" href="#blade-components" aria-label="Permalink to &quot;Blade components&quot;">​</a></h2><p>The plugin provides autocompletion for blade component tags, making it easy to reference and navigate to blade components.</p><p><img src="'+s+'" alt="Code generation"></p>',9)]))}const b=a(r,[["render",d]]);export{g as __pageData,b as default};
